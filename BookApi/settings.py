"""
Django settings for BookApi project.

Generated by 'django-admin startproject' using Django 3.1.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

from celery.schedules import crontab

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ')_fj!6)a3g+$crdu#3a@b8_ks6=hjk3t5z$!%q=3i0g2qq#k3a'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]
APPEND_SLASH = False

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'library',
    'rest_framework',
    'rest_framework.authtoken',  # 用户认证  忽略用户注册登录后  用户创建后给token信息认证
]
# 0ba0715271b6927923f8da721c61eb05806ccd9d
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',  # 启用 Token 认证
    ],
}

MIDDLEWARE = [
    'library.middleware.LoggingMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'BookApi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'BookApi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

# 数据库迁移设置  本地mysql为例
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': "drf",
        "HOST": "127.0.0.1",
        "PORT": 3306,
        "USER": "root",
        "PASSWORD": "xz123"
    }
}

import pymysql
pymysql.install_as_MySQLdb()

# django指定的用户认证系统
# AUTH_USER_MODEL = 'user.User'

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

# 邮箱配置   拿网易邮箱举例
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.163.com'  # smtp服务地址
EMAIL_PORT = 25  # smtp服务端口
EMAIL_HOST_USER = 'xuwengang_20**@163.com'  # 发送者邮箱
EMAIL_HOST_PASSWORD = 'YQHGKBG****TUUMCWY'  # 授权码
EMAIL_FROM = '福田图书馆<xuwengang_2022@163.com>'

# celery定时任务
CELERY_BEAT_SCHEDULE = {
    'send-due-reminders': {
        'task': 'library.tasks.send_due_date_reminders',
        'schedule': crontab(hour=8, minute=0),
    },
}

# settings.py

# Celery 配置  消息代理以及结果存储   正式使用 #todo： 避免明文存储密码，改用环境变量管理敏感信息   此处做测试暂时忽略
CELERY_BROKER_URL = 'redis://:xz197****@106.15.236.77:6379/1'  # Redis 作为消息代理
CELERY_RESULT_BACKEND = 'redis://:xz197****@106.15.236.77:6379/2'  # Redis 作为结果存储
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'  # 根据项目时区调整